version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - "3000:3000"
    container_name: tweeter-frontend
    environment:
      - NODE_ENV=development
    command: npm run dev -- --host
    networks:
      - tweeter-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tweeter-backend
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - "4000:4000"
    depends_on:
      - database
    networks:
      - tweeter-network

  database:
      build:
        context: ./database
        dockerfile: Dockerfile
      container_name: tweeter-database
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      volumes:
        - db-data:/var/lib/postgresql/data
        - ./database/init.sh:/docker-entrypoint-initdb.d/init.sh
        - ./database/sql:/docker-entrypoint-initdb.d/sql
      ports:
        - "5432:5432"
      networks:
        - tweeter-network


networks:
  tweeter-network:
    driver: bridge

volumes:
  db-data:
